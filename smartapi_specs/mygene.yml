openapi: 3.0.0
info:
  contact:
    email: help@mygene.info
    name: Chunlei Wu
    x-id: https://github.com/newgene
    x-role: responsible developer
  description: Documentation of the MyGene.info Gene Query web services. Learn more
    about [MyGene.info](http://mygene.info/)
  termsOfService: http://mygene.info/terms/
  title: MyGene.info API
  version: '3.0'
servers:
- description: Encrypted Production server
  url: https://mygene.info/v3
- description: Production server
  url: http://mygene.info/v3
tags:
- name: gene
- name: annotation
- name: query
- name: translator
- name: biothings
paths:
  /gene:
    post:
      parameters:
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/species'
        name: species
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ids:
                  description: multiple geneids seperated by comma, e.g., "ids=1017,1018"
                    or "ids=695,ENSG00000123374". Note that currently we only take
                    the input ids up to 1000 maximum, the rest will be omitted.
                  type: string
              required:
              - ids
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Gene'
                type: array
          description: a list of matching gene objects
          x-JSONLDContext: https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/jsonld_context/mygene_gene_1.1.json
          x-responseValueType:
          - path: symbol
            valueType: http://identifiers.org/hgnc.symbol/
          - path: unigene
            valueType: http://identifiers.org/unigene/
          - path: uniprot.Swiss-Prot
            valueType: http://identifiers.org/uniprot/
          - path: pdb
            valueType: http://identifiers.org/pdb/
          - path: pathway.biocarta.id
            valueType: http://identifiers.org/biocarta.pathway/
          - path: pathway.kegg.id
            valueType: http://identifiers.org/kegg.pathway/
          - path: pathway.reactome.id
            valueType: http://identifiers.org/reactome/
          - path: pathway.wikipathways.id
            valueType: http://identifiers.org/wikipathways/
          - path: pathway.pharmgkb.id
            valueType: http://identifiers.org/pharmgkb.pathways/
      summary: For a list of gene ids, return the matching gene objects
      tags:
      - annotation
  /gene/{geneid}:
    get:
      parameters:
      - description: Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired
          Entrez Gene id works too if it is replaced by a new one, e.g., 245794
        example: '1017'
        in: path
        name: geneid
        required: true
        schema:
          type: string
        x-requestTemplate:
        - template: /gene/{{input}}
          valueType: http://identifiers.org/ncbigene/
        - template: /gene/{{input}}
          valueType: http://identifiers.org/ensembl/
        x-valueType:
        - http://identifiers.org/ncbigene/
        - http://identifiers.org/ensembl/
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/email'
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gene'
          description: A matching gene object
          x-JSONLDContext: https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/jsonld_context/mygene_gene_1.1.json
          x-responseValueType:
          - path: symbol
            valueType: http://identifiers.org/hgnc.symbol/
          - path: unigene
            valueType: http://identifiers.org/unigene/
          - path: uniprot.Swiss-Prot
            valueType: http://identifiers.org/uniprot/
          - path: pdb
            valueType: http://identifiers.org/pdb/
          - path: pathway.biocarta.id
            valueType: http://identifiers.org/biocarta.pathway/
          - path: pathway.kegg.id
            valueType: http://identifiers.org/kegg.pathway/
          - path: pathway.reactome.id
            valueType: http://identifiers.org/reactome/
          - path: pathway.wikipathways.id
            valueType: http://identifiers.org/wikipathways/
          - path: pathway.pharmgkb.id
            valueType: http://identifiers.org/pharmgkb.pathways/
      summary: Retrieve gene annotation object based on Entrez or Ensembl gene id,
        support JSONP and CORS as well.
      tags:
      - annotation
  /metadata:
    get:
      parameters:
      - $ref: '#/components/parameters/callback'
        name: callback
      responses:
        '200':
          description: MyGene.info metadata object
      summary: Get metadata about the data available from MyGene.info.
  /metadata/fields:
    get:
      parameters:
      - description: Pass a search term to filter the available fields, e.g. "search=clinvar".
        in: query
        name: search
        schema:
          type: string
      - description: Pass a prefix string to filter the available fields, e.g. "prefix=refseq".
        in: query
        name: prefix
        schema:
          type: string
      - $ref: '#/components/parameters/callback'
        name: callback
      responses:
        '200':
          description: MyGene.info metadata fields object
      summary: Get metadata about the data fields available from MyGene.info.
  /query:
    get:
      parameters:
      - description: Query string. Examples "CDK2", "NM_052827", "204639_at", "chr1:151,073,054-151,383,976",
          "hg19.chr1:151073054-151383976". The detailed query syntax can be found
          from our [docs](http://docs.mygene.info/en/latest/doc/query_service.html).
        example: CDK2
        in: query
        name: q
        required: true
        schema:
          type: string
        x-requestTemplate:
        - template: symbol:{{input}}
          valueType: http://identifiers.org/hgnc.symbol/
        - template: refseq.genomic:{{input}}
          valueType: http://identifiers.org/refseq/
        - template: unigene:{{input}}
          valueType: http://identifiers.org/unigene/
        - template: uniprot.Swiss-Prot:{{input}}
          valueType: http://identifiers.org/uniprot/
        - template: pdb:{{input}}
          valueType: http://identifiers.org/pdb/
        - template: pathway.biocarta.id:{{input}}
          valueType: http://identifiers.org/biocarta.pathway/
        - template: pathway.kegg.id:{{input}}
          valueType: http://identifiers.org/kegg.pathway/
        - template: pathway.wikipathways.id:{{input}}
          valueType: http://identifiers.org/wikipathways/
        - template: pathway.pharmgkb.id:{{input}}
          valueType: http://identifiers.org/pharmgkb.pathways/
        - template: pathway.reactome.id:{{input}}
          valueType: http://identifiers.org/reactome/
        - template: ensembl.gene
          valueType: http://identifiers.org/ensembl.gene/
        - template: ensembl.protein
          valueType: http://identifiers.org/ensembl.protein/
        - template: ensembl.transcript
          valueType: http://identifiers.org/ensembl.transcript/
        - template: ensembl.translation
          valueType: http://identifiers.org/ensembl.translation/
        x-valueType:
        - http://identifiers.org/hgnc.symbol/
        - http://identifiers.org/refseq/
        - http://identifiers.org/unigene/
        - http://identifiers.org/uniprot/
        - http://identifiers.org/pdb/
        - http://identifiers.org/biocarta.pathway/
        - http://identifiers.org/kegg.pathway/
        - http://identifiers.org/wikipathways/
        - http://identifiers.org/pharmgkb.pathways/
        - http://identifiers.org/reactome/
        - http://identifiers.org/ensembl.gene/
        - http://identifiers.org/ensembl.protein/
        - http://identifiers.org/ensembl.transcript/
        - http://identifiers.org/ensembl.translation/
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/species'
        name: species
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/from'
        name: from
      - $ref: '#/components/parameters/sort'
        name: sort
      - description: a single field or comma-separated fields to return facets, for
          example, "facets=taxid", "facets=taxid,type_of_gene".
        in: query
        name: facets
        schema:
          type: string
      - description: "relevant when faceting on species (i.e., \u201Cfacets=taxid\u201D\
          \ are passed). It\u2019s used to pass species filter without changing the\
          \ scope of faceting, so that the returned facet counts won\u2019t change.\
          \ Either species name or taxonomy id can be used, just like \u201Cspecies\u201D\
          \ parameter."
        in: query
        name: species_facet_filter
        schema:
          type: string
      - description: "when passed as \u201Ctrue\u201D or \u201C1\u201D, the query\
          \ returns only the hits with valid Entrez gene ids. Default: false."
        in: query
        name: entrezonly
        schema:
          type: boolean
      - description: "when passed as \u201Ctrue\u201D or \u201C1\u201D, the query\
          \ returns only the hits with valid Ensembl gene ids. Default: false."
        in: query
        name: ensemblonly
        schema:
          type: boolean
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A query response object with "hits" property
          x-JSONLDContext: https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/jsonld_context/mygene_query_1.1.json
          x-responseValueType:
          - path: hits._id
            valueType: http://identifiers.org/ncbigene/
          - path: hits.entrezgene
            valueType: http://identifiers.org/ncbigene/
          - path: hits.symbol
            valueType: http://identifiers.org/hgnc.symbol/
          - path: hits.taxid
            valueType: http://identifiers.org/taxonomy/
      summary: Make gene query and return matching gene list. Support JSONP and CORS
        as well.
      tags:
      - query
    post:
      parameters:
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/species'
        name: species
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                q:
                  description: multiple query terms seperated by comma (also support
                    "+" or white space), but no wildcard, e.g., "q=1017,1018" or "q=CDK2+BTK"
                  type: string
                scopes:
                  description: 'Specify one or more fields (separated by comma) as
                    the search "scopes", e.g., "scopes=entrezgene", "scopes=entrezgene,ensemblgene".
                    The available "fields" can be passed to "scopes" parameter are
                    listed [here](http://mygene.info/doc/query_service.html#available-fields).
                    Default: "scopes=entrezgene,ensemblgene,retired" (either Entrez
                    or Ensembl gene ids).'
                  type: string
              required:
              - q
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPOSTResult'
          description: Query response objects with "hits" property
          x-JSONLDContext: https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/jsonld_context/mygene_query_1.1.json
          x-responseValueType:
          - path: hits._id
            valueType: http://identifiers.org/ncbigene/
          - path: hits.entrezgene
            valueType: http://identifiers.org/ncbigene/
          - path: hits.symbol
            valueType: http://identifiers.org/hgnc.symbol/
          - path: hits.taxid
            valueType: http://identifiers.org/taxonomy/
      summary: Make gene batch query and return matching gene hits
      tags:
      - query
      x-bte-semanticmapping:
        $ref: '#/components/x-bte-semanticmapping/query-post'
components:
  parameters:
    callback:
      description: you can pass a "callback" parameter to make a JSONP call.
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned fields when passed "fields"
        parameter contains dot notation, e.g. "fields=refseq.rna". If "true" or "1",
        the returned data object contains a single "refseq.rna" field, otherwise ("false"
        or "0"), a single "refseq" field with a sub-field of "rna". Default: true.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us an email, so that we can better track the usage or follow up with you.
      in: query
      name: email
      schema:
        type: string
    fields:
      description: 'a comma-separated fields to limit the fields returned from the
        matching gene hits. The supported field names can be found from any gene object
        (e.g. http://mygene.info/v3/gene/1017). Note that it supports dot notation
        as well, e.g., you can pass "refseq.rna". If "fields=all", all available fields
        will be returned. Default: "symbol,name,taxid,entrezgene,ensemblgene".'
      in: query
      name: fields
      schema:
        type: string
    from:
      description: 'the number of matching gene hits to skip, starting from 0. Combining
        with "size" parameter, this can be useful for paging. Default: 0.'
      in: query
      name: from
      schema:
        type: integer
    size:
      description: 'the maximum number of matching gene hits to return (with a cap
        of 1000 at the moment). Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated fields to sort on. Prefix with "-" for descending
        order, otherwise in ascending order. Default: sort by matching scores in decending
        order.'
      in: query
      name: sort
      schema:
        type: string
    species:
      description: 'can be used to limit the gene hits from given species. You can
        use "common names" for nine common species (human, mouse, rat, fruitfly, nematode,
        zebrafish, thale-cress, frog and pig). All other species, you can provide
        their taxonomy ids. Multiple species can be passed using comma as a separator.
        Default: human,mouse,rat.'
      in: query
      name: species
      schema:
        type: string
  schemas:
    Gene:
      properties:
        AnimalQTLdb:
          type: string
        FLYBASE:
          type: string
        HGNC:
          type: string
        HPRD:
          type: string
        MGI:
          type: string
        MIM:
          type: string
        RATMAP:
          type: string
        RGD:
          type: string
        TAIR:
          type: string
        Vega:
          type: string
        WormBase:
          type: string
        Xenbase:
          type: string
        ZFIN:
          type: string
        _id:
          type: string
        accession:
          type: object
        aliase:
          type: string
        ec:
          type: string
        ensembl:
          type: object
        entrezgene:
          format: int64
          type: integer
        generif:
          properties:
            pubmed:
              $ref: '#/components/schemas/int64_or_array'
            text:
              type: string
          type: object
        genomic_pos:
          type: object
        go:
          type: object
        homologene:
          type: object
        interpro:
          type: object
        locus_tag:
          type: string
        map_location:
          type: string
        miRBase:
          type: string
        name:
          type: string
        other_names:
          $ref: '#/components/schemas/string_or_array'
        pathway:
          type: object
        pdb:
          $ref: '#/components/schemas/string_or_array'
        pfam:
          type: string
        pharmgkb:
          type: string
        pid:
          type: string
        pir:
          type: string
        prosite:
          type: string
        reagent:
          type: object
        refseq:
          type: object
        reporter:
          type: object
        summary:
          type: string
        symbol:
          type: string
        taxid:
          format: int32
          type: integer
        type_of_gene:
          type: string
        umls:
          type: object
        unigene:
          type: string
        uniprot:
          properties:
            Swiss-Prot:
              $ref: '#/components/schemas/string_or_array'
            TrEMBL:
              $ref: '#/components/schemas/string_or_array'
          type: object
        wikipedia:
          properties:
            url_stub:
              type: string
          type: object
      required:
      - _id
      - taxid
      type: object
    MinimalGene:
      properties:
        _id:
          type: string
        entrezgene:
          format: int64
          type: integer
        name:
          type: string
        symbol:
          type: string
        taxid:
          format: int32
          type: integer
      required:
      - _id
      - taxid
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - $ref: '#/components/schemas/MinimalGene'
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Gene'
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-semanticmapping:
    query-post:
      "@context": http://schema.org
      "@type": Gene
      bts:ensembl: ensembl.gene
      bts:hgnc: HGNC
      bts:omim: MIM
      bts:entrez: entrezgene
      bts:pharos: pahros.target_id
      bts:umls: umls.cui
      bts:unigene: unigene
      bts:pharmgkb: pharmgkb
      bts:name:
      - name
      - other_names
      bts:symbol: symbol
      bts:description: summary
      bts:enablesMF:
        "@type": MolecularActivity
        bts:go: go.MF.id
        bts:pubmed: go.MF.pubmed
        bts:evidence: go.MF.evidence
        bts:term: go.MF.term
        "$input": bts:entrez
        "$source": entrez
      bts:involvedInBP:
        "@type": BiologicalProcess
        bts:go: go.BP.id
        bts:pubmed: go.BP.pubmed
        bts:evidence: go.BP.evidence
        bts:term: go.BP.term
        "$input": bts:entrez
        "$source": entrez
      bts:involvedInCC:
        "@type": CellularComponent
        bts:go: go.CC.id
        bts:pubmed: go.CC.pubmed
        bts:evidence: go.CC.evidence
        bts:term: go.CC.term
        "$input": bts:entrez
        "$source": entrez
      bts:involvedInPathway:
      - "@type": Pathway
        bts:wikipathways: pathway.wikipathways.id
        bts:name: pathway.wikipathways.name
        "$input": bts:entrez
        "$source": cpdb
      - "@type": Pathway
        bts:reactome: pathway.reactome.id
        bts:name: pathway.reactome.name
        "$input": bts:entrez
        "$source": cpdb
      bts:hasTranscript:
        "@type": Transcript
        bts:ensembl: ensembl.transcript
        "$input": bts:ensembl
      bts:hasGeneProduct:
        "@type": Protein
        bts:ensembl: ensembl.protein
        bts:uniprot: uniprot.Swiss-Prot
        "$input": bts:ensembl
      bts:hasHomolog:
        "@type": Gene
        bts:mgi: pantherdb.ortholog.MGI
        bts:inTaxon: pantherdb.ortholog.taxid
        bts:rgd: pantherdb.ortholog.RGD
        bts:ensembl: pantherdb.ortholog.Ensembl
        bts:zfin: pantherdb.ortholog.ZFIN
        bts:flybase: pantherdb.ortholog.FlyBase
        bts:sgd: pantherdb.ortholog.SGD
        bts:pombase: pantherdb.ortholog.PomBase
        bts:dictybase: pantherdb.ortholog.dictyBase
        bts:tair: pantherdb.ortholog.TAIR
        bts:hgnc: pantherdb.ortholog.HGNC
        "$input": bts:entrez
      bts:hasProteinStructure: pdb
      bts:inTaxon: taxid
